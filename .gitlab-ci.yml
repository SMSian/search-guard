workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - when: always

variables:
  SG_BUILD_IMAGE: "floragunncom/ci-pipeline-focal-mvn38-java17:0.1.0"
  DOCKER_VERSION: "20.10.17"
  
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode -s settings.xml -q -U"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

  GIT_DEPTH: 10
  
default:
  image: $SG_BUILD_IMAGE
  tags:
    - hetzner-gitlab-runner-2
  interruptible: true
  timeout: 90m
  before_script:
    - |
        
        echo "Executing default before_script for: $CI_JOB_NAME in stage: $CI_JOB_STAGE because of: $CI_PIPELINE_SOURCE with image $CI_JOB_IMAGE"
        echo "CI_COMMIT_BRANCH: $CI_COMMIT_BRANCH"
        echo "CI_COMMIT_REF_NAME: $CI_COMMIT_REF_NAME"
        echo "CI_COMMIT_TAG: $CI_COMMIT_TAG"
        
        set +e
        apk update > /dev/null 2>&1
        apk add --no-cache gomplate jq curl zip xmlstarlet git wget bash sudo > /dev/null 2>&1
        set -e

        if [ -z "$CI_COMMIT_TAG" ]; then 
          export ES_VERSION=$(xmlstarlet sel -t -m "/_:project/_:properties/_:elasticsearch.version" -v . pom.xml)
          echo "No CI_COMMIT_TAG set, infer ES version from POM: $ES_VERSION";
          #no need to set SG_VERSION version here because its only used in the release job
        else
          # $CI_COMMIT_TAG: sg-flx-1.0.0-es-8.2.3
          export SG_VERSION=$(echo $CI_COMMIT_TAG | sed -n 's/^sg-flx-\(.*\)-es-.*$/\1/p')
          export ES_VERSION=$(echo $CI_COMMIT_TAG | sed -n 's/^sg-flx-.*-es-\(.*\)$/\1/p')
          echo "SG_VERSION: $SG_VERSION"
          echo "ES_VERSION: $ES_VERSION"
        fi

stages:
  - prepare
  - build
  - test
  - "Backend Int Tests Core"
  #- "Frontend Int Tests Core"
  #- "Frontend Int Tests Features"
  #- "Frontend Int Tests External Features"
  #- "Frontend Compat Int Tests 1"
  #- "Frontend Compat Int Tests 2"
  - release

include:
  - local: '.gitlab-ci-branch-specific.yml'
  - local: 'ci/backend-int-tests.yml'
  - local: 'ci/backend-unit-tests.yml'
  #- local: 'ci/frontend-int-tests.yml'
  #- local: 'ci/frontend-int-tests-features.yml'
  #- local: 'ci/frontend-int-tests-external-features.yml'
  #- local: 'ci/frontend-int-tests-compat1.yml'
  #- local: 'ci/frontend-int-tests-compat2.yml'

upload_mvn_third_party_deps:
  allow_failure: false
  stage: prepare
  script:
    - |
       set +e
       echo "Check if we need to upload 3rd party artifacts for ES $ES_VERSION"
       curl --fail -Ss -XHEAD -u "$ARTIFACTORY_USER:$ARTIFACTORY_PASSWORD" "https://maven.search-guard.com/api/storage/third-party/org/elasticsearch/plugin/transport-netty4/$ES_VERSION/transport-netty4-$ES_VERSION.pom"
       retVal=$?

       set -e
       if [ $retVal -ne 0 ]; then
         echo "Upload artifacts for ES $ES_VERSION"
         ./dev/populate_maven.sh "$ES_VERSION" remote
       else
         echo "Artifacts already uploaded for ES $ES_VERSION"
       fi
       
build:
  allow_failure: false
  stage: build
  #rules:
    #- if: '$CI_COMMIT_TAG =~ /^sg-flx-.*/'
    #  when: never
   # - when: always
  script:
    - | 
       SNAPSHOT_REVISION="$CI_COMMIT_REF_NAME-SNAPSHOT"
       mvn -Drevision=$SNAPSHOT_REVISION $MAVEN_CLI_OPTS -Delasticsearch.version=$ES_VERSION -DskipTests clean deploy
       echo "SNAPSHOT_REVISION=$SNAPSHOT_REVISION" > snapshot.env
       echo "ES_VERSION=$ES_VERSION" >> snapshot.env
       cat snapshot.env
  artifacts:
    when: on_success
    paths:
      - "plugin/target/releases/"
      - "snapshot.env"
    expire_in: 12h
    reports:
      dotenv: snapshot.env
  cache:
    key: mavenrepo
    paths:
      - .m2/repository

deploy_release:
  allow_failure: false
  interruptible: false
  stage: release
  rules:
    - if: '$CI_COMMIT_TAG =~ /^sg-flx-.*/'
  script:
    - ./dev/setup_gpg.sh
    - |
      
      DEPLOY_VERSION="$SG_VERSION-es-$ES_VERSION"
      echo "Release DEPLOY_VERSION: $DEPLOY_VERSION"
      echo "Release ES_VERSION: $ES_VERSION"
      echo "Release SG_VERSION: $SG_VERSION"
      
      MAJOR="$(echo $ES_VERSION | cut -d. -f1-2)"
      TEST_IT_BRANCH="${MAJOR}.x"
      echo "TEST_IT_BRANCH: $TEST_IT_BRANCH"

      curl --request POST --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN_SGI8" "https://git.floragunn.com/api/v4/projects/215/repository/tags?tag_name=$CI_COMMIT_TAG&ref=$TEST_IT_BRANCH" || true

      echo "Deploying Release to production repo"
      mvn clean deploy $MAVEN_CLI_OPTS -DskipTests -Prelease -Delasticsearch.version=$ES_VERSION -Dsg-suite.version=$SG_VERSION
  